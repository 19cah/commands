/**
 * Readme.js
 * This file generates the mardown for the readme file.
 *
 * Usage:
 * 	$ npm run readme
 *
 * @author Carlos Abraham Hernandez
 */

const fs = require('fs');
const path = require('path');
const demos = require('../demos.json');
const {readmeBadge} = require('./utils/readme.util');
const {
	markdownLink,
	markdownImage,
	markdownHeader,
	markdownBlockquote
} = require('./utils/mardown.util');

/**
 * Empty Readme.
 */
const readme = [];

/**
 * Warning
 */

const warning = '<!-- PLEASE DO NOT EDIT THIS FILE! -->';
/**
 * Github Badge.
 */
const githubBadge = readmeBadge({
	link: 'https://github.com/abranhe/public-demos/actions',
	image: 'https://github.com/abranhe/public-demos/workflows/build/badge.svg',
	alt: 'Github'
});

/**
 * Travis Badge.
 */
const travisBadge = readmeBadge({
	link: 'https://travis-ci.org/abranhe/public-demos',
	image: 'https://img.shields.io/travis/abranhe/public-demos?logo=travis',
	alt: 'Travis'
});

/**
 * License Badge.
 */
const licenseBadge = readmeBadge({
	link: 'https://github.com/abranhe/public-demos/blob/master/license',
	image: 'https://img.shields.io/github/license/abranhe/public-demos.svg',
	alt: 'License'
});

/**
 * List of Badges in title.
 */
const badges = `${githubBadge} ${travisBadge} ${licenseBadge}`;
const title = `${markdownHeader(1, 'public-demos')} ${badges}`;

/**
 * Subtitle
 */
const subTitle = `${markdownBlockquote(
	'A collection of my public demos.'
)}`;

/**
 * Demos images.
 */
const readmeDemos = demos
	.map(demo => {
		const url = `${markdownLink(demo.url.slice(8), demo.url)}\n\n`;
		const image = markdownImage(demo.name, `screenshots/${demo.name}.png`);
		const imgWithLink = `${markdownLink(image, demo.url)}`;

		return url + imgWithLink;
	})
	.join('\n\n');

/**
 * License.
 */
const author = markdownLink('Carlos Abraham', 'https://github.com/abranhe');
const license = `${markdownHeader(2, 'License')}\n\nMIT Â© ${author}`;

/**
 * Adding readme content.
 */
readme.push(warning);
readme.push(title);
readme.push(subTitle);
readme.push(readmeDemos);
readme.push(license);

const file = {
	path: path.join(__dirname, '..', 'readme.md'),
	content: readme.join('\n\n'),
	encoding: 'utf8'
};

fs.writeFile(file.path, file.content, file.encoding, err => {
	if (err) {
		return console.log('Error', err);
	}

	console.log('Done!');
});
